{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\nconst initialState = {\n  // Getting the tken from local storage\n  token: localStorage.getItem('token'),\n  isAuntheticated: null,\n  // Will be set to true if user has successfully logged in\n  loading: true,\n  // Ensures loading is done, backend request has been finished\n  user: null // User will get stored here\n\n};\nexport default function (state = initialState, action) {\n  // Takes in action that is dispatched\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      // User must get logged in\n      localStorage.setItem('token', payload.token); // Stores token so that user can log in, first argument is name and second is value\n\n      return { ...state,\n        ...payload,\n        isAuntheticated: true,\n        loading: false\n      };\n\n    case REGISTER_FAIL:\n      // Remove local storage of token\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuntheticated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/suhas/Documents/College Projects/DevConnector/client/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","initialState","token","localStorage","getItem","isAuntheticated","loading","user","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,aAA1B,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACjB;AACAC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFU;AAGjBC,EAAAA,eAAe,EAAE,IAHA;AAGM;AACvBC,EAAAA,OAAO,EAAE,IAJQ;AAIF;AACfC,EAAAA,IAAI,EAAE,IALW,CAKN;;AALM,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGP,YAAjB,EAA+BQ,MAA/B,EAAsC;AACjD;AACA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBF,MAAxB;;AAEA,UAAOC,IAAP;AACI,SAAKX,gBAAL;AAAuB;AACnBI,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,OAAO,CAACT,KAAtC,EADJ,CACkD;;AAC9C,aAAO,EACH,GAAGM,KADA;AAEH,WAAGG,OAFA;AAGHN,QAAAA,eAAe,EAAE,IAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKN,aAAL;AAAoB;AAChBG,MAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGL,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAOJ;AAAS,aAAOE,KAAP;AAlBb;AAoBH","sourcesContent":["import {REGISTER_SUCCESS, REGISTER_FAIL} from '../actions/types';\r\n\r\nconst initialState = {\r\n    // Getting the tken from local storage\r\n    token: localStorage.getItem('token'),\r\n    isAuntheticated: null, // Will be set to true if user has successfully logged in\r\n    loading: true, // Ensures loading is done, backend request has been finished\r\n    user: null // User will get stored here\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    // Takes in action that is dispatched\r\n    const {type, payload} = action;\r\n\r\n    switch(type) {\r\n        case REGISTER_SUCCESS: // User must get logged in\r\n            localStorage.setItem('token', payload.token); // Stores token so that user can log in, first argument is name and second is value\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuntheticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL: // Remove local storage of token\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuntheticated: false,\r\n                loading: false\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}