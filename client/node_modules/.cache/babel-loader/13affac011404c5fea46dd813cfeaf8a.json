{"ast":null,"code":"// Bring in axios for http requests\nimport axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nimport { setAlert } from './alert'; // Register user\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // Preparing data\n\n  const body = JSON.stringify({\n    name,\n    email,\n    passowrd\n  });\n\n  try {\n    const res = await axios.post('api/users', body, config); // Dispatch action\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors; // Gets body errors\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/suhas/Documents/College Projects/DevConnector/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","setAlert","register","name","email","password","dispatch","config","headers","body","JSON","stringify","passowrd","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,aAA1B,QAA8C,SAA9C;AACA,SAAQC,QAAR,QAAuB,SAAvB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA6B,MAAMC,QAAN,IAAkB;AACnE,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf,CADmE,CAOnE;;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACR,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcQ,IAAAA;AAAd,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,WAAX,EAAwBL,IAAxB,EAA8BF,MAA9B,CAAlB,CADA,CAGA;;AACAD,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEhB,gBADD;AAELiB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GARD,CAQE,OAAOC,GAAP,EAAY;AACV,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC,CADU,CAC+B;;AAEzC,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIhB,QAAQ,CAACL,QAAQ,CAACqB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDjB,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEf;AADD,KAAD,CAAR;AAGH;AACJ,CA7BM","sourcesContent":["// Bring in axios for http requests\r\nimport axios from \"axios\";\r\nimport {REGISTER_SUCCESS, REGISTER_FAIL} from './types';\r\nimport {setAlert} from './alert';\r\n\r\n// Register user\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // Preparing data\r\n    const body = JSON.stringify({name, email, passowrd});\r\n\r\n    try {\r\n        const res = await axios.post('api/users', body, config);\r\n\r\n        // Dispatch action\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        const errors = err.response.data.errors; // Gets body errors\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}